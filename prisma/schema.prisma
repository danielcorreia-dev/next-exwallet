generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Account   Account[]
}

model Account {
  id          String        @id @default(uuid())
  name        String
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  status      AccountStatus
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Goals       Goal[]
  Transaction Transaction[]
}

model Goal {
  id          String    @id @default(uuid())
  accountId   String
  account     Account   @relation(fields: [accountId], references: [id])
  name        String
  description String?
  amount      Float
  deadline    DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Transaction {
  id                  String                @id @default(uuid())
  accountId           String
  account             Account               @relation(fields: [accountId], references: [id])
  amount              Float
  transactionType     TransactionType       @relation(fields: [transactionTypeId], references: [id])
  transactionTypeId   String
  transactionDate     DateTime
  description         String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  TransactionCategory TransactionCategory[]
}

model TransactionType {
  id          String        @id @default(uuid())
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Transaction Transaction[]
}

model TransactionCategory {
  id            String      @id @default(uuid())
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  categoryId    String
  category      Category    @relation(fields: [categoryId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Category {
  id                  String                @id @default(uuid())
  name                String
  description         String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  TransactionCategory TransactionCategory[]
}

enum AccountStatus {
  ACTIVE
  INACTIVE
  DELETED
}
